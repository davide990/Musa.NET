//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from formula_grammar.g by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="formula_grammarParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public interface Iformula_grammarListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] formula_grammarParser.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] formula_grammarParser.ConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.formula"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormula([NotNull] formula_grammarParser.FormulaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.formula"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormula([NotNull] formula_grammarParser.FormulaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.disjunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDisjunction([NotNull] formula_grammarParser.DisjunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.disjunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDisjunction([NotNull] formula_grammarParser.DisjunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.conjunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConjunction([NotNull] formula_grammarParser.ConjunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.conjunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConjunction([NotNull] formula_grammarParser.ConjunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.negation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNegation([NotNull] formula_grammarParser.NegationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.negation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNegation([NotNull] formula_grammarParser.NegationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicate([NotNull] formula_grammarParser.PredicateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicate([NotNull] formula_grammarParser.PredicateContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.predicateTuple"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicateTuple([NotNull] formula_grammarParser.PredicateTupleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.predicateTuple"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicateTuple([NotNull] formula_grammarParser.PredicateTupleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] formula_grammarParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] formula_grammarParser.TermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.literal_term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral_term([NotNull] formula_grammarParser.Literal_termContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.literal_term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral_term([NotNull] formula_grammarParser.Literal_termContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.variable_term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable_term([NotNull] formula_grammarParser.Variable_termContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.variable_term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable_term([NotNull] formula_grammarParser.Variable_termContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.varValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarValue([NotNull] formula_grammarParser.VarValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.varValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarValue([NotNull] formula_grammarParser.VarValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] formula_grammarParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] formula_grammarParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.varType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarType([NotNull] formula_grammarParser.VarTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.varType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarType([NotNull] formula_grammarParser.VarTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.simple_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimple_type([NotNull] formula_grammarParser.Simple_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.simple_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimple_type([NotNull] formula_grammarParser.Simple_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.numeric_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumeric_type([NotNull] formula_grammarParser.Numeric_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.numeric_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumeric_type([NotNull] formula_grammarParser.Numeric_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.integral_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntegral_type([NotNull] formula_grammarParser.Integral_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.integral_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntegral_type([NotNull] formula_grammarParser.Integral_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.floating_point_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloating_point_type([NotNull] formula_grammarParser.Floating_point_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.floating_point_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloating_point_type([NotNull] formula_grammarParser.Floating_point_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.nullable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNullable_type([NotNull] formula_grammarParser.Nullable_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.nullable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNullable_type([NotNull] formula_grammarParser.Nullable_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.string_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString_type([NotNull] formula_grammarParser.String_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.string_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString_type([NotNull] formula_grammarParser.String_typeContext context);
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from formula_grammar.g by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="Iformula_grammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public partial class formula_grammarBaseListener : Iformula_grammarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondition([NotNull] formula_grammarParser.ConditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondition([NotNull] formula_grammarParser.ConditionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.formula"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormula([NotNull] formula_grammarParser.FormulaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.formula"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormula([NotNull] formula_grammarParser.FormulaContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.disjunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDisjunction([NotNull] formula_grammarParser.DisjunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.disjunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDisjunction([NotNull] formula_grammarParser.DisjunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.conjunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConjunction([NotNull] formula_grammarParser.ConjunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.conjunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConjunction([NotNull] formula_grammarParser.ConjunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.negation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNegation([NotNull] formula_grammarParser.NegationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.negation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNegation([NotNull] formula_grammarParser.NegationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredicate([NotNull] formula_grammarParser.PredicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredicate([NotNull] formula_grammarParser.PredicateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.predicateTuple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredicateTuple([NotNull] formula_grammarParser.PredicateTupleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.predicateTuple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredicateTuple([NotNull] formula_grammarParser.PredicateTupleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerm([NotNull] formula_grammarParser.TermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerm([NotNull] formula_grammarParser.TermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.literal_term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral_term([NotNull] formula_grammarParser.Literal_termContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.literal_term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral_term([NotNull] formula_grammarParser.Literal_termContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.variable_term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_term([NotNull] formula_grammarParser.Variable_termContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.variable_term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_term([NotNull] formula_grammarParser.Variable_termContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.varValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarValue([NotNull] formula_grammarParser.VarValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.varValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarValue([NotNull] formula_grammarParser.VarValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] formula_grammarParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] formula_grammarParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.varType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarType([NotNull] formula_grammarParser.VarTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.varType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarType([NotNull] formula_grammarParser.VarTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.simple_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_type([NotNull] formula_grammarParser.Simple_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.simple_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_type([NotNull] formula_grammarParser.Simple_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.numeric_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumeric_type([NotNull] formula_grammarParser.Numeric_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.numeric_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumeric_type([NotNull] formula_grammarParser.Numeric_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.integral_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntegral_type([NotNull] formula_grammarParser.Integral_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.integral_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntegral_type([NotNull] formula_grammarParser.Integral_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.floating_point_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloating_point_type([NotNull] formula_grammarParser.Floating_point_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.floating_point_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloating_point_type([NotNull] formula_grammarParser.Floating_point_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.nullable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNullable_type([NotNull] formula_grammarParser.Nullable_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.nullable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNullable_type([NotNull] formula_grammarParser.Nullable_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="formula_grammarParser.string_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString_type([NotNull] formula_grammarParser.String_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="formula_grammarParser.string_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString_type([NotNull] formula_grammarParser.String_typeContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
